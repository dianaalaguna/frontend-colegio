{"version":3,"file":"941.1b9b8f008272dd50.js","mappings":"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","names":["i0","profesor_r3","_id","nombres","apellidos","$event","subject_r2","_r1","$implicit","selectedProfesorId","AsignarProfesorComponent_tr_21_option_11_Template","ctx_r3","asignarProfesor","nombre","grado","periodo","profesores","AsignarProfesorComponent","constructor","subjectService","userService","cdr","this","subjects","selectedSubjectId","ngOnInit","getProfesores","subscribe","loadSubjects","getSubjectsWithoutProfessors","data","map","subject","length","String","loadProfesores","console","log","profesorId","asociarProfesor","next","response","alert","error","err","message","trackBySubjectId","index","i1","i2","selectors","standalone","features","decls","vars","consts","template","rf","ctx","AsignarProfesorComponent_tr_21_Template","CommonModule","i3","FormsModule","i4","styles"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/pages/asignar-profesor/asignar-profesor.component.html","./src/app/pages/asignar-profesor/asignar-profesor.component.ts"],"sourcesContent":["<div class=\"container mt-4\">\r\n  <h2 class=\"mb-4\">ðŸ“š Asignar Profesor a Materia</h2>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <h4>Materias</h4>\r\n      <table class=\"table table-bordered table-hover\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Grado</th>\r\n            <th>Periodo</th>\r\n            <th>Profesores</th>\r\n            <th>AcciÃ³n</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let subject of subjects; trackBy: trackBySubjectId\">\r\n            <td>{{ subject.nombre }}</td>\r\n            <td>{{ subject.grado }}</td>\r\n            <td>{{ subject.periodo }}</td>\r\n            <td>\r\n              <select class=\"form-control\" [(ngModel)]=\"subject.selectedProfesorId\" [attr.key]=\"subject._id\">\r\n                <option value=\"\" disabled>Profesor</option>\r\n                <option *ngFor=\"let profesor of profesores\" [value]=\"profesor._id\">\r\n                  {{ profesor.nombres }} {{ profesor.apellidos }}\r\n                </option>\r\n              </select>\r\n\r\n            </td>\r\n            <td>\r\n              <button class=\"btn btn-success mt-3\" (click)=\"asignarProfesor(subject)\">Asignar</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { SubjectService } from '../../services/subject.service';\r\nimport { UserService } from '../../services/user.service'; // Servicio para obtener usuarios\r\nimport { Subject } from '../../models/subject.model';\r\nimport { User } from '../../models/user.model'; // Modelo para usuario\r\n\r\n@Component({\r\n  selector: 'app-asignar-profesor',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule], // Importas los mÃ³dulos necesarios\r\n  templateUrl: './asignar-profesor.component.html',\r\n  styleUrls: ['./asignar-profesor.component.css']\r\n})\r\nexport class AsignarProfesorComponent implements OnInit {\r\n  subjects: Subject[] = []; // Lista de materias\r\n  profesores: User[] = []; // Lista de profesores\r\n  selectedProfesorId: string | null = null; // Profesor seleccionado, inicializado a null\r\n  selectedSubjectId: string | null = null; // Materia seleccionada, inicializado a null\r\n\r\n  constructor(\r\n    private subjectService: SubjectService,\r\n    private userService: UserService,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getProfesores().subscribe(profesores => {\r\n      this.profesores = profesores;\r\n\r\n      // Esperar a que se carguen los profesores antes de cargar las materias\r\n      this.loadSubjects();\r\n    });\r\n  }\r\n\r\n\r\n  // Cargar todas las materias\r\n  loadSubjects(): void {\r\n    this.subjectService.getSubjectsWithoutProfessors().subscribe(data => {\r\n      this.subjects = data.map(subject => {\r\n        let selectedProfesorId = '';\r\n\r\n        // Si hay profesores asignados, toma el primero y asegÃºrate que sea string\r\n        if (subject.profesores && subject.profesores.length > 0) {\r\n          selectedProfesorId = String(subject.profesores[0]);\r\n        }\r\n\r\n        return {\r\n          ...subject,\r\n          selectedProfesorId\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  // Cargar todos los profesores\r\n  loadProfesores(): void {\r\n    this.userService.getProfesores().subscribe(\r\n      (data) => {\r\n        console.log('Profesores:', data);\r\n        this.profesores = data;\r\n      }\r\n    );\r\n  }\r\n\r\n  // Asociar el profesor a la materia\r\n  asignarProfesor(subject: Subject): void {\r\n    const profesorId = subject.selectedProfesorId;\r\n\r\n    if (!profesorId) {\r\n      alert('Por favor selecciona un profesor');\r\n      return;\r\n    }\r\n\r\n    this.subjectService.asociarProfesor(subject._id!, profesorId).subscribe({\r\n      next: (response) => {\r\n        alert('Profesor asignado correctamente');\r\n\r\n        // Opcional: recarga la lista para mostrar el cambio\r\n        this.loadSubjects();\r\n      },\r\n      error: (err) => {\r\n        alert(err.error.message || 'Error al asignar profesor');\r\n        console.error(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  trackBySubjectId(index: number, subject: Subject): string {\r\n    return subject._id!;\r\n  }\r\n\r\n}\r\n\r\n"],"x_google_ignoreList":[]}