{"version":3,"file":"595.42a68a37efa21888.js","mappings":"4MAcO,IAAMA,EAAoB,MAA3B,MAAOA,EAUXC,YACUC,EACAC,EACAC,GAFAC,KAAAH,iBACAG,KAAAF,QACAE,KAAAD,SAZVC,KAAAC,WAAkB,CAChBC,iBAAkB,GAClBC,QAAS,GACTC,UAAW,GACXC,YAAa,GACbC,WAAY,GAQV,CAEJC,WAEEP,KAAKF,MAAMU,OAAOC,UAAWD,IACvBA,EAAON,kBAETF,KAAKU,eAAeF,EAAON,iBAAmB,EAGpD,CAEAQ,eAAeR,GAEbF,KAAKH,eAAec,iBAAiBT,GAAkBO,UAAU,CAC/DG,KAAOC,IACLb,KAAKC,WAAaY,GAEpBC,MAAQC,IACNC,QAAQF,MAAM,6BAA8BC,EAAG,GAGrD,CAEAE,aAIEjB,KAAKkB,kBAEP,CAEAA,mBACElB,KAAKH,eAAesB,cAAcnB,KAAKC,YAAYQ,UAAU,CAC3DG,KAAOQ,IACLC,MAAM,yCAENrB,KAAKC,WAAa,CAChBC,iBAAkB,GAClBC,QAAS,GACTC,UAAW,GACXC,YAAa,GACbC,WAAY,KAIhBQ,MAAQC,IACNC,QAAQF,MAAM,4BAA6BC,GAC3CM,MAAM,mCAA6B,GAGzC,iDAjEW1B,GAAoB2B,MAAAC,KAAAD,MAAAE,MAAAF,MAAAE,MAAA,oCAApB7B,EAAoB8B,UAAA,sBAAAC,YAAA,EAAAC,SAAA,CAAAL,OAAAM,MAAA,GAAAC,KAAA,EAAAC,OAAA,gxBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICZ/BV,MAFF,UAEEA,CAF0B,QAEtBA,MAAA,sBAAgBA,QAEpBA,MAAA,YAAMA,MAAA,6BAAYW,EAAAhB,YAAY,GAE1BK,MADF,UACEA,CADsB,aACQA,MAAA,0BAAiBA,QAC/CA,MAAA,aAIEA,MAAA,yBAAAY,GAAAZ,aAAAW,EAAAhC,WAAAC,iBAAAgC,KAAAD,EAAAhC,WAAAC,iBAAAgC,IAAA,GAKJZ,UAGEA,MADF,UACEA,CADsB,aACDA,MAAA,cAAOA,QAC5BA,MAAA,cAIEA,MAAA,yBAAAY,GAAAZ,aAAAW,EAAAhC,WAAAE,QAAA+B,KAAAD,EAAAhC,WAAAE,QAAA+B,IAAA,GAIJZ,UAGEA,MADF,WACEA,CADsB,cACCA,MAAA,gBAASA,QAChCA,MAAA,cAIEA,MAAA,yBAAAY,GAAAZ,aAAAW,EAAAhC,WAAAG,UAAA8B,KAAAD,EAAAhC,WAAAG,UAAA8B,IAAA,GAIJZ,UAGEA,MADF,WACEA,CADsB,cACGA,MAAA,mBAAYA,QACrCA,MAAA,eAIEA,MAAA,yBAAAY,GAAAZ,aAAAW,EAAAhC,WAAAI,YAAA6B,KAAAD,EAAAhC,WAAAI,YAAA6B,IAAA,GAIJZ,UAGEA,MADF,WACEA,CADsB,eACEA,MAAA,0BAAmBA,QAC3CA,MAAA,eAIEA,MAAA,yBAAAY,GAAAZ,aAAAW,EAAAhC,WAAAK,WAAA4B,KAAAD,EAAAhC,WAAAK,WAAA4B,IAAA,GAIJZ,UAEAA,MAAA,gBACEA,MAAA,yBAGNA,mBA3DQA,MAAA,GAAAA,MAAA,UAAAW,EAAAhC,WAAAC,kBAaAoB,MAAA,GAAAA,MAAA,UAAAW,EAAAhC,WAAAE,SAYAmB,MAAA,GAAAA,MAAA,UAAAW,EAAAhC,WAAAG,WAYAkB,MAAA,GAAAA,MAAA,UAAAW,EAAAhC,WAAAI,aAYAiB,MAAA,GAAAA,MAAA,UAAAW,EAAAhC,WAAAK,4BDlDI6B,KAAWC,mCAAEC,KAAkBC,OAAY,SAI1C3C,CAAoB","names":["EstudiantesComponent","constructor","studentService","route","router","this","estudiante","codigoEstudiante","nombres","apellidos","correoTutor","nacimiento","ngOnInit","params","subscribe","loadEstudiante","getStudentByCode","next","data","error","err","console","submitForm","createEstudiante","createStudent","response","alert","i0","i1","i2","selectors","standalone","features","decls","vars","consts","template","rf","ctx","$event","FormsModule","i3","HttpClientModule","CommonModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/pages/estudiantes/estudiantes.component.ts","./src/app/pages/estudiantes/estudiantes.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { StudentService } from '../../services/student.service'; // Asegúrate de tener el servicio para la API\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-estudiantes',\r\n  standalone: true,\r\n  imports: [FormsModule, HttpClientModule, CommonModule],\r\n  templateUrl: './estudiantes.component.html',\r\n  styleUrls: ['./estudiantes.component.css'],\r\n})\r\nexport class EstudiantesComponent implements OnInit {\r\n  estudiante: any = {\r\n    codigoEstudiante: '',\r\n    nombres: '',\r\n    apellidos: '',\r\n    correoTutor: '',\r\n    nacimiento: '',\r\n  };\r\n  //  isEditMode: boolean = false;\r\n\r\n  constructor(\r\n    private studentService: StudentService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Verificar si estamos en modo edición (comprobando si hay un código de estudiante en la URL)\r\n    this.route.params.subscribe((params) => {\r\n      if (params['codigoEstudiante']) {\r\n        //      this.isEditMode = true;\r\n        this.loadEstudiante(params['codigoEstudiante']);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadEstudiante(codigoEstudiante: string): void {\r\n    // Si estamos en modo edición, cargamos los datos del estudiante\r\n    this.studentService.getStudentByCode(codigoEstudiante).subscribe({\r\n      next: (data) => {\r\n        this.estudiante = data;\r\n      },\r\n      error: (err) => {\r\n        console.error('Error al cargar estudiante', err);\r\n      },\r\n    });\r\n  }\r\n\r\n  submitForm(): void {\r\n    /*    if (this.isEditMode) {\r\n          this.updateEstudiante();\r\n        } else {*/\r\n    this.createEstudiante();\r\n    //   }\r\n  }\r\n\r\n  createEstudiante(): void {\r\n    this.studentService.createStudent(this.estudiante).subscribe({\r\n      next: (response) => {\r\n        alert('✅ Estudiante creado exitosamente');\r\n        // Limpiar los campos del formulario\r\n        this.estudiante = {\r\n          codigoEstudiante: '',\r\n          nombres: '',\r\n          apellidos: '',\r\n          correoTutor: '',\r\n          nacimiento: '',\r\n        };\r\n        //this.router.navigate(['/estudiantes']); // Redirigir a la lista de estudiantes después de crear\r\n      },\r\n      error: (err) => {\r\n        console.error('Error al crear estudiante', err);\r\n        alert('❌ Error al crear estudiante');\r\n      },\r\n    });\r\n  }\r\n\r\n  /*updateEstudiante(): void {\r\n    this.studentService.updateStudent(this.estudiante).subscribe({\r\n      next: (response) => {\r\n        console.log('Estudiante actualizado');\r\n        this.router.navigate(['/estudiantes']); // Redirigir a la lista de estudiantes después de editar\r\n      },\r\n      error: (err) => {\r\n        console.error('Error al actualizar estudiante', err);\r\n      },\r\n    });\r\n  }*/\r\n}\r\n","<div class=\"container mt-4\">\r\n  <!--<h2>{{ isEditMode ? 'Editar Estudiante' : 'Crear Estudiante' }}</h2>-->\r\n  <h2>Crear Estudiante</h2>\r\n\r\n  <form (ngSubmit)=\"submitForm()\">\r\n    <div class=\"form-group\">\r\n      <label for=\"codigoEstudiante\">Código Estudiante</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"codigoEstudiante\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"estudiante.codigoEstudiante\"\r\n        name=\"codigoEstudiante\"\r\n\r\n        required\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"nombres\">Nombres</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"nombres\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"estudiante.nombres\"\r\n        name=\"nombres\"\r\n        required\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"apellidos\">Apellidos</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"apellidos\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"estudiante.apellidos\"\r\n        name=\"apellidos\"\r\n        required\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"correoTutor\">Correo Tutor</label>\r\n      <input\r\n        type=\"email\"\r\n        id=\"correoTutor\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"estudiante.correoTutor\"\r\n        name=\"correoTutor\"\r\n        required\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"nacimiento\">Fecha de Nacimiento</label>\r\n      <input\r\n        type=\"date\"\r\n        id=\"nacimiento\"\r\n        class=\"form-control\"\r\n        [(ngModel)]=\"estudiante.nacimiento\"\r\n        name=\"nacimiento\"\r\n        required\r\n      />\r\n    </div>\r\n\r\n    <button type=\"submit\" class=\"btn btn-primary mt-3\">\r\n      Crear Estudiante\r\n    </button>\r\n  </form>\r\n</div>\r\n"],"x_google_ignoreList":[]}