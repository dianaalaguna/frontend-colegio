{"version":3,"file":"917.bb192eb796589fa5.js","mappings":"iRAcUA,MAFJ,OAEIA,CAFkC,OAElCA,CADE,SAEAA,MAAA,GAEJA,UACAA,MAAA,QAAIA,MAAA,GAAmBA,QACvBA,MAAA,QAAIA,MAAA,GACNA,oCANOA,MAAA,GAAAA,MAAA,aAAAA,MAAA,EAAAC,EAAAC,EAAAC,MACDH,cAAA,IAAAE,EAAAE,OAAA,KAGAJ,MAAA,GAAAA,MAAAE,EAAAG,OACAL,MAAA,GAAAA,MAAAE,EAAAI,UCAL,IAAMC,EAA0B,MAAjC,MAAOA,EAMXC,YACUC,EACAC,EACAC,GAFAC,KAAAH,iBACAG,KAAAF,cACAE,KAAAD,MARVC,KAAAC,SAAsB,GACtBD,KAAAE,YAAyB,GACzBF,KAAAG,qBAAsC,KACtCH,KAAAI,kBAAmC,IAM/B,CAEJC,WAKEL,KAAKM,cAEP,CAIAA,eACEN,KAAKH,eAAeU,uBAAuBC,UAAUC,IACnDT,KAAKC,SAAWQ,GAEpB,iDA3BWd,GAA0BP,MAAAsB,KAAAtB,MAAAuB,KAAAvB,aAAA,oCAA1BO,EAA0BiB,UAAA,6BAAAC,YAAA,EAAAC,SAAA,CAAA1B,OAAA2B,MAAA,GAAAC,KAAA,EAAAC,OAAA,gKAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDlBrC/B,MADF,UACEA,CAD0B,UACTA,MAAA,6CAAgCA,QAK3CA,MAHN,YAGMA,CAH0C,YAG1CA,CAFsB,OAEtBA,CADE,QACEA,MAAA,YAAMA,QACVA,MAAA,QAAIA,MAAA,WAAKA,QACTA,MAAA,SAAIA,MAAA,cAERA,YACAA,MAAA,YACEA,MAAA,GAAAiC,EAAA,YAWNjC,mBAX8BA,MAAA,IAAAA,MAAA,UAAAgC,EAAAnB,0BCGlBqB,KAAYC,KAAEC,KAAaC,KAAYC,OAAA,SAItC/B,CAA0B","names":["i0","_c0","subject_r1","_id","nombre","grado","periodo","AsignarEstudianteComponent","constructor","subjectService","userService","cdr","this","subjects","estudiantes","selectedEstudianteId","selectedSubjectId","ngOnInit","loadSubjects","getSubjectsWithUsers","subscribe","data","i1","i2","selectors","standalone","features","decls","vars","consts","template","rf","ctx","AsignarEstudianteComponent_tr_13_Template","CommonModule","i3","FormsModule","RouterModule","i4"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/pages/asignar-estudiante/asignar-estudiante.component.html","./src/app/pages/asignar-estudiante/asignar-estudiante.component.ts"],"sourcesContent":["<div class=\"container mt-4\">\r\n  <h2 class=\"mb-4\">ðŸ“š Asignar Estudiantes a Materia</h2>\r\n\r\n  <table class=\"table table-bordered table-hover\">\r\n    <thead class=\"table-dark\">\r\n      <tr>\r\n        <th>Nombre</th>\r\n        <th>Grado</th>\r\n        <th>Periodo</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let subject of subjects;\">\r\n        <td>\r\n          <a [routerLink]=\"['/asignar-estudiantes', subject._id]\" class=\"text-decoration-none\">\r\n            {{ subject.nombre }}\r\n          </a>\r\n        </td>\r\n        <td>{{ subject.grado }}</td>\r\n        <td>{{ subject.periodo }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SubjectService } from '../../services/subject.service';\r\nimport { UserService } from '../../services/user.service'; // Servicio para obtener usuarios\r\nimport { Subject } from '../../models/subject.model';\r\nimport { User } from '../../models/user.model'; // Modelo para usuario\r\nimport { Student } from '../../models/student.model'; // Modelo para usuario\r\n\r\n\r\n@Component({\r\n  selector: 'app-asignar-estudiante',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, RouterModule], // Importas los mÃ³dulos necesarios\r\n  templateUrl: './asignar-estudiante.component.html',\r\n  styleUrls: ['./asignar-estudiante.component.css']\r\n})\r\nexport class AsignarEstudianteComponent implements OnInit {\r\n  subjects: Subject[] = []; // Lista de materias\r\n  estudiantes: Student[] = []; // Lista de profesores\r\n  selectedEstudianteId: string | null = null; // Estudiante seleccionado, inicializado a null\r\n  selectedSubjectId: string | null = null; // Materia seleccionada, inicializado a null\r\n\r\n  constructor(\r\n    private subjectService: SubjectService,\r\n    private userService: UserService,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    /*    this.userService.getProfesores().subscribe(profesores => {\r\n          this.profesores = profesores;*/\r\n\r\n    // Esperar a que se carguen los profesores antes de cargar las materias\r\n    this.loadSubjects();\r\n\r\n  }\r\n\r\n\r\n  // Cargar todas las materias\r\n  loadSubjects(): void {\r\n    this.subjectService.getSubjectsWithUsers().subscribe(data => {\r\n      this.subjects = data;\r\n    });\r\n  }\r\n  // Cargar todos los profesores\r\n  /* loadProfesores(): void {\r\n     this.userService.getProfesores().subscribe(\r\n       (data) => {\r\n         console.log('Profesores:', data);\r\n         this.profesores = data;\r\n       }\r\n     );\r\n   }*/\r\n\r\n  // Asociar el profesor a la materia\r\n  /*  asignarProfesor(subject: Subject): void {\r\n      const profesorId = subject.selectedProfesorId;\r\n\r\n      if (!profesorId) {\r\n        alert('Por favor selecciona un profesor');\r\n        return;\r\n      }\r\n\r\n      this.subjectService.asociarProfesor(subject._id!, profesorId).subscribe({\r\n        next: (response) => {\r\n          alert('Profesor asignado correctamente');\r\n\r\n          // Opcional: recarga la lista para mostrar el cambio\r\n          this.loadSubjects();\r\n        },\r\n        error: (err) => {\r\n          alert(err.error.message || 'Error al asignar profesor');\r\n          console.error(err);\r\n        }\r\n      });\r\n    }\r\n\r\n    trackBySubjectId(index: number, subject: Subject): string {\r\n      return subject._id!;\r\n    }\r\n  */\r\n}\r\n\r\n"],"x_google_ignoreList":[]}