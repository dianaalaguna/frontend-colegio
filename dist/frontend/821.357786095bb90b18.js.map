{"version":3,"file":"821.357786095bb90b18.js","mappings":"mRA8CIA,MAAA,YACEA,MAAA,GACFA,+BAF8CA,MAAA,UAAAA,MAAA,EAAAC,EAAAC,EAAAC,cAAAC,SAAA,YAAAF,EAAAC,cAAAC,SAAA,WAC5CJ,cAAA,IAAAE,EAAAC,cAAA,8CA1CFH,MADF,QACEA,CADiC,YAC3BA,MAAA,sBAAAA,MAAAK,GAAA,MAAAH,EAAAF,QAAA,OAAAA,MAAYE,EAAAI,WAAU,GAExBN,MADF,UACEA,CADgB,aACuBA,MAAA,YAAMA,QAC7CA,MAAA,aAIEA,MAAA,yBAAAO,GAAAP,MAAAK,GAAA,MAAAH,EAAAF,qBAAAE,EAAAM,QAAAC,OAAAF,KAAAL,EAAAM,QAAAC,OAAAF,GAAAP,MAAAO,EAAA,GAIJP,UAGEA,MADF,UACEA,CADgB,aACsBA,MAAA,WAAKA,QAC3CA,MAAA,aAIEA,MAAA,yBAAAO,GAAAP,MAAAK,GAAA,MAAAH,EAAAF,qBAAAE,EAAAM,QAAAE,MAAAH,KAAAL,EAAAM,QAAAE,MAAAH,GAAAP,MAAAO,EAAA,GAIJP,UAGEA,MADF,WACEA,CADgB,eACwBA,MAAA,cAAOA,QAC/CA,MAAA,eAIEA,MAAA,yBAAAO,GAAAP,MAAAK,GAAA,MAAAH,EAAAF,qBAAAE,EAAAM,QAAAG,QAAAJ,KAAAL,EAAAM,QAAAG,QAAAJ,GAAAP,MAAAO,EAAA,GAIJP,UAEAA,MAAA,gBAA8CA,MAAA,iBAChDA,UAGAA,MAAA,GAAAY,EAAA,cAGFZ,gCArCQA,MAAA,GAAAA,MAAA,UAAAE,EAAAM,QAAAC,QAYAT,MAAA,GAAAA,MAAA,UAAAE,EAAAM,QAAAE,OAYAV,MAAA,GAAAA,MAAA,UAAAE,EAAAM,QAAAG,SAUAX,MAAA,GAAAA,MAAA,OAAAE,EAAAC,sCAONH,MAAA,OAAGA,MAAA,4BAAsBA,SCrCtB,IAAMa,EAAsB,MAA7B,MAAOA,EAIXC,YACUC,EACAC,EACAC,GAFAC,KAAAH,iBACAG,KAAAF,QACAE,KAAAD,SANVC,KAAAV,QAA0B,KAC1BU,KAAAf,cAA+B,IAM5B,CAEHgB,WAEE,MAAMC,EAAYF,KAAKF,MAAMK,SAASC,SAASC,IAAI,MAC/CH,GAEFF,KAAKH,eAAeS,eAAeJ,GAAWK,UAC3CC,IACCR,KAAKV,QAAUkB,GAEhBC,IACCC,QAAQD,MAAM,6BAA8BA,EAAK,EAIzD,CAEArB,WACE,GAAIY,KAAKV,QAAS,CAEhB,MAAMY,EAAYF,KAAKF,MAAMK,SAASC,SAASC,IAAI,MAC/CH,GAEFF,KAAKH,eAAec,cAAcT,EAAWF,KAAKV,SAASiB,UACxDK,IACCZ,KAAKf,cAAgB,oCACrB4B,WAAW,IAAMb,KAAKD,OAAOe,SAAS,CAAC,kBAAmB,IAAI,EAE/DL,IACCT,KAAKf,cAAgB,0CACrByB,QAAQD,MAAM,8BAA+BA,EAAK,EAI1D,CACF,iDA5CWd,GAAsBb,MAAAiC,KAAAjC,MAAAkC,MAAAlC,MAAAkC,MAAA,oCAAtBrB,EAAsBsB,UAAA,yBAAAC,YAAA,EAAAC,SAAA,CAAArC,OAAAsC,MAAA,EAAAC,KAAA,EAAAC,OAAA,mnBAAAC,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IDfjC1C,MADF,UACEA,CAD0B,UACTA,MAAA,8BAAiBA,QAmDlCA,MAhDA,EAAA4C,EAAA,aAgDA5C,CAhDmC,EAAA6C,EAAA,yBAAA7C,OAmDrCA,+BAnDQA,MAAA,GAAeA,MAAf,OAAA2C,EAAAnC,QAAeR,CAAA,WAAA8C,mBCQXC,KAAYC,UAAEC,KAAcC,KAAWC,0CAAA,SAItCtC,CAAsB","names":["i0","_c0","ctx_r1","updateMessage","includes","_r1","onSubmit","$event","subject","nombre","grado","periodo","SubjectUpdateComponent_div_3_div_16_Template","SubjectUpdateComponent","constructor","subjectService","route","router","this","ngOnInit","subjectId","snapshot","paramMap","get","getSubjectById","subscribe","data","error","console","updateSubject","response","setTimeout","navigate","i1","i2","selectors","standalone","features","decls","vars","consts","template","rf","ctx","SubjectUpdateComponent_div_3_Template","SubjectUpdateComponent_ng_template_4_Template","loading_r3","CommonModule","i3","RouterModule","FormsModule","i4"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/pages/subject-update/subject-update.component.html","./src/app/pages/subject-update/subject-update.component.ts"],"sourcesContent":["<div class=\"container mt-4\">\r\n  <h2 class=\"mb-4\">ðŸ“š Editar Materia</h2>\r\n\r\n  <!-- Verificamos que 'subject' no sea nulo -->\r\n  <div *ngIf=\"subject; else loading\">\r\n    <form (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"nombre\" class=\"form-label\">Nombre</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"nombre\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"subject.nombre\"\r\n          name=\"nombre\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label for=\"grado\" class=\"form-label\">Grado</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"grado\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"subject.grado\"\r\n          name=\"grado\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label for=\"periodo\" class=\"form-label\">Periodo</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"periodo\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"subject.periodo\"\r\n          name=\"periodo\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary\">Actualizar</button>\r\n    </form>\r\n\r\n    <!-- Mensaje de Ã©xito o error -->\r\n    <div *ngIf=\"updateMessage\" class=\"mt-4 alert\" [ngClass]=\"{'alert-success': updateMessage.includes('Ã©xito'), 'alert-danger': updateMessage.includes('error')}\">\r\n      {{ updateMessage }}\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Plantilla de carga -->\r\n  <ng-template #loading>\r\n    <p>Cargando la materia...</p>\r\n  </ng-template>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';  // Necesario para el uso de ngModel\r\nimport { SubjectService } from '../../services/subject.service'; // El servicio para manejar las materias\r\nimport { ActivatedRoute } from '@angular/router'; // Para obtener el id de la URL\r\nimport { Subject } from '../../models/subject.model'; // Modelo de la materia\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  standalone: true,  // Hacemos que el componente sea standalone\r\n  selector: 'app-subject-update',\r\n  imports: [CommonModule, RouterModule, FormsModule],  // Importamos los mÃ³dulos necesarios\r\n  templateUrl: './subject-update.component.html',\r\n  styleUrls: ['./subject-update.component.css']\r\n})\r\nexport class SubjectUpdateComponent implements OnInit {\r\n  subject: Subject | null = null;  // AquÃ­ almacenaremos la materia que vamos a editar\r\n  updateMessage: string | null = null;  // Mensaje para mostrar despuÃ©s de actualizar\r\n\r\n  constructor(\r\n    private subjectService: SubjectService,  // Inyectamos el servicio\r\n    private route: ActivatedRoute,  // Para obtener el id de la ruta\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // Obtenemos el id desde la URL utilizando ActivatedRoute\r\n    const subjectId = this.route.snapshot.paramMap.get('id');\r\n    if (subjectId) {\r\n      // Obtenemos la materia utilizando el servicio\r\n      this.subjectService.getSubjectById(subjectId).subscribe(\r\n        (data) => {\r\n          this.subject = data;  // Asignamos la materia obtenida a la variable subject\r\n        },\r\n        (error) => {\r\n          console.error('Error al cargar la materia', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.subject) {\r\n      // Obtenemos el id desde la URL nuevamente para actualizar la materia\r\n      const subjectId = this.route.snapshot.paramMap.get('id');\r\n      if (subjectId) {\r\n        // Llamamos al servicio para actualizar la materia\r\n        this.subjectService.updateSubject(subjectId, this.subject).subscribe(\r\n          (response) => {\r\n            this.updateMessage = 'Materia actualizada con Ã©xito!';\r\n            setTimeout(() => this.router.navigate(['/subject-list']), 1000);\r\n          },\r\n          (error) => {\r\n            this.updateMessage = 'Hubo un error al actualizar la materia.';\r\n            console.error('Error al actualizar materia', error);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"x_google_ignoreList":[]}